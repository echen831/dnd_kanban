{"version":3,"sources":["component/item.jsx","component/dnd.jsx","App.js","index.js"],"names":["Item","item","update","removeItem","grpIdx","itemIdx","useState","edit","setEdit","name","setName","email","setEmail","comment","setComment","nameInput","useRef","emailInput","commentInput","handleUpdate","field","text","params","current","value","handleChange","e","currentTarget","className","id","length","onClick","type","placeholder","ref","onChange","INITIALDATA","title","items","DND","props","list","setList","dragging","setDragging","dragItem","dragNode","handleDragEnter","currentItem","target","oldList","newList","JSON","parse","stringify","splice","handleDragEnd","removeEventListener","slice","concat","getStyles","map","grp","key","onDragEnter","draggable","onDragStart","addEventListener","setTimeout","handleDragStart","col","push","addItems","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.22c1e169.chunk.js","sourcesContent":["import React, { useState, useRef } from 'react';\n\nexport const Item = ({ item, update, removeItem, grpIdx, itemIdx}) => {\n\n    const [edit, setEdit] = useState(false);\n\n    const [name, setName] = useState(item.name);\n    const [email, setEmail] = useState(item.email);\n    const [comment, setComment] = useState(item.comment);\n\n\n    const nameInput = useRef();\n    const emailInput = useRef();\n    const commentInput = useRef();\n\n    const handleUpdate = (field, text, params) => {\n        update(field, text, params);\n\n        switch (field) {\n            case \"name\":\n                setEdit(false);\n                nameInput.current.value = \"\"\n                break;\n            case \"email\":\n                setEdit(false);\n                emailInput.current.value = \"\"\n                break;\n            case \"comment\":\n                setEdit(false);\n                commentInput.current.value = \"\"\n                break;\n            default:\n                break;\n        }\n    }\n\n    const handleSubmit = (e, data, params) => {\n        e.preventDefault();\n        update(data, params);\n        \n        nameInput.current.value = \"\";\n        emailInput.current.value = \"\";\n        commentInput.current.value = \"\";\n    }\n\n    const handleChange = (e, field) => {\n\n        switch (field) {\n            case \"name\":\n                setName(e.currentTarget.value);\n                break;\n            case \"email\":\n                setEmail(e.currentTarget.value)\n                break;\n            case \"comment\":\n                setComment(e.currentTarget.value)\n                break;\n            default:\n                break;\n        }\n    }\n\n    return (\n        <div className=\"item-container\" >\n            <div className=\"info-container\" id={edit ? 'hide' : ''}>\n                <p>{item.name.length ? item.name : 'Name'}</p>\n                <p>{item.email.length ? item.email : 'Email'}</p>\n                <p>{item.comment.length ? item.comment : ''}</p>\n                <p id='edit-btn' onClick={() => setEdit(!edit)}>Edit</p>\n                \n            </div>\n\n\n            <div className=\"edit-container\" id={!edit ? 'hide' : ''}>\n                <div >\n                    <input type=\"text\" placeholder=\"Name\" ref={nameInput} onChange={(e) => handleChange(e, \"name\")}/>\n                    <button onClick={() => handleUpdate(\"name\", nameInput.current.value, { grpIdx, itemIdx })}>Update</button>\n                </div>\n                <div >\n                    <input type=\"text\" placeholder=\"Email\" ref={emailInput} onChange={(e) => handleChange(e, \"email\")}/>\n                    <button onClick={() => handleUpdate(\"email\", emailInput.current.value, { grpIdx, itemIdx })}>Update</button>\n                </div>\n                <div >\n                    <textarea type=\"text\" placeholder=\"Comments\" ref={commentInput} onChange={(e) => handleChange(e, \"comment\")} />\n                    <button onClick={() => handleUpdate(\"comment\", commentInput.current.value, { grpIdx, itemIdx })}>Update</button>\n                </div>\n                <div>\n                    <p id='edit-btn' onClick={() => removeItem({ grpIdx, itemIdx })}>Delete</p>\n                    <p id='edit-btn' onClick={() => setEdit(!edit)}>Close</p>\n                </div>\n            </div>\n        </div>    \n    )\n}","import React, { useState, useRef } from 'react';\nimport { Item } from './item';\n\n//[Applied] [Phone Screen] [On site] [Offered] [Accepted] [Rejected]\n\nconst INITIALDATA = [\n    { title: 'Applied', items: [{ name: 'Eric One', email: 'e1@gmail.com', comment: '' }] },\n    { title: 'Phone Screen', items: [{ name: 'Eric Two', email: 'e2@gmail.com', comment: '' }] },\n    { title: 'On site', items: [] },\n    { title: 'Offered', items: [] },\n    { title: 'Accepted', items: [] },\n    { title: 'Rejected', items: [] },\n]\n\nexport const DND = (props) => {\n\n    const [ list, setList ] = useState(INITIALDATA);\n    const [dragging, setDragging] = useState(false);\n    // const [ editTitle, setEditTitle ] = useState(false);\n\n    const dragItem = useRef();\n    const dragNode = useRef();\n    // const textInput = useRef();\n\n    const handleDragStart = (e, params) => {\n        dragItem.current = params;\n        dragNode.current = e.target;\n        dragNode.current.addEventListener('dragend', handleDragEnd)\n        setTimeout( () => {\n            setDragging(true)\n        },0)\n    };\n\n    const handleDragEnter = (e, params) => {\n        const currentItem = dragItem.current;\n        if (e.target !== dragNode.current) {\n            setList(oldList => {\n                let newList = JSON.parse(JSON.stringify(oldList));\n                newList[params.grpIdx].items.splice(params.itemIdx, 0, newList[currentItem.grpIdx].items.splice(currentItem.itemIdx, 1)[0])\n                dragItem.current = params;\n                return newList\n            })\n        }\n    }\n\n    const handleDragEnd = () => {\n        setDragging(false);\n        dragNode.current.removeEventListener('dragend', handleDragEnd);\n        dragItem.current = null;\n        dragNode.current = null;\n    }\n\n    const addItems = (col) => {\n        let newList = [...list];\n        newList[col].items.push({ name: '', email: '', comment: '' });\n        setList(newList)\n\n        // setList(oldList => {\n        //     let newList = JSON.parse(JSON.stringify(oldList))\n        //     newList[col].items.push({ name: '', email: '', phone: '' })\n        //     return newList\n        // })\n    }\n\n\n    const removeItem = (params) => {\n        let newList = [...list];\n        newList[params.grpIdx].items = newList[params.grpIdx].items.slice(0, params.itemIdx).concat(newList[params.grpIdx].items.slice(params.itemIdx + 1))\n        setList(newList)\n        // setList(oldList => {\n        //     let newList = JSON.parse(JSON.stringify(oldList))\n        //     newList[params.grpIdx].items = newList[params.grpIdx].items.slice(0, params.itemIdx).concat(newList[params.grpIdx].items.slice(params.itemIdx + 1))\n        //     return newList\n        // })\n    }\n\n    // const update = (data, params) => {\n    //     let newList = [...list];\n    //     newList[params.grpIdx].items[params.itemIdx] = {\n    //         name: data.name,\n    //         email: data.email,\n    //         phone: data.phone\n    //     }\n\n    //     setList(newList);\n    // }\n\n    const update = (field, text, params) => {\n\n\n        setList(oldList => {\n            let newList = JSON.parse(JSON.stringify(oldList))\n            newList[params.grpIdx].items[params.itemIdx][field] = text\n            return newList\n        })\n        // textInput.current.value = ''\n        // setEditTitle(false)\n    }\n\n    const getStyles = (params) => {\n        const currentItem = dragItem.current\n        if (currentItem.grpIdx === params.grpIdx && currentItem.itemIdx === params.itemIdx) {\n            return 'current dnd-item'\n        }\n        return 'dnd-item'\n    }\n\n    return (\n        <div className='dnd-header'>\n            <div className='drag-n-drop' id={dragging ? 'dragging' : ''}>\n                {list.map((grp, grpIdx) => (\n                    <div key={grpIdx} \n                         className='dnd-group'\n                         onDragEnter={dragging && !grp.items.length ? (e) => handleDragEnter(e, { grpIdx, itemIdx: 0 }) : null}>\n                        <div className='group-title'>{grp.title}</div>\n                        {grp.items ? grp.items.map((item, itemIdx) => (\n                            <div draggable\n                                onDragStart={(e) => { handleDragStart(e, { grpIdx, itemIdx }) }}\n                                onDragEnter={dragging ? (e) => { handleDragEnter(e, { grpIdx, itemIdx }) } : null}\n                                key={itemIdx}\n                                className={dragging ? getStyles({ grpIdx, itemIdx }) : 'dnd-item'}>\n                                <Item item={item}\n                                      grpIdx={grpIdx}\n                                      itemIdx={itemIdx}\n                                      update={update}\n                                      removeItem={removeItem}\n                                />\n                                {/* <div>\n                                    <p>{item.title.length ? item.title : 'Name'}</p>\n                                    <button onClick={() => setEditTitle(!editTitle)}>+</button>\n                                    <div id={!editTitle ? 'hide' : ''}>\n                                        <input type=\"text\" ref={textInput} />\n                                        <button onClick={() => update(textInput.current.value, { grpIdx, itemIdx })}>Update</button>\n                                    </div>\n                                    <button onClick={() => removeItem({ grpIdx, itemIdx })}>Remove</button>\n                                </div> */}\n                            </div>\n                        )) : null}\n                        {grp.title === 'Applied' ? <button onClick={() => addItems(grpIdx)}>Add</button> : null}\n                        \n                    </div>\n                ))}\n            </div>\n\n        </div>\n    )\n}","import React from 'react';\nimport { DND } from './component/dnd';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <DND/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,document.getElementById('root'));\n\n"],"sourceRoot":""}